// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model User {
  id                      Int         @id @default(autoincrement())
  email                   String      @unique
  password                String?
  membershipType          String      @default("lifetime")
  subscriptionStart       DateTime?   
  subscriptionEnd         DateTime?  
  apiKey                  String?     @default("null")
  baseUrl                 String?     @default("https://api.openai.com/v1")
  llmApiKey               String?     @default("null")
  llmModel                String?     @default("gpt-4o")
  llmTemperature          Float?      @default(0.7)
  llmTopP                 Float?      @default(1.0)
  collections             Collection[]
  learnSteps              String      @default("10m 1d")
  relearnSteps            String      @default("10m") 
  relearnGraduatingInterval Float     @default(0.75) 
  graduatingInterval      Int         @default(3) 
  easyInterval            Int         @default(4) 
  startingEase            Float       @default(2.5)
  minimumEase             Float       @default(1.3) 
  easyBonus               Float       @default(1.3) 
  intervalModifier        Float       @default(1.0) 
  maximumInterval         Int         @default(180) 
  maximumNewPerDay        Int         @default(9999)
  contributionHistory     Json        @default("{}")
  newUser                 Boolean     @default(true)
}

model Collection {
  id        Int      @id @default(autoincrement())
  title     String   @db.VarChar(25)
  image     String @default("pattern1.svg")
  lastAdded DateTime? @default(now()) 
  userId    Int
  user      User     @relation(fields: [userId], references: [id])
  problems  Problem[]
  newCount  Int      @default(0)
  learningCount Int @default(0)
  reviewCount Int   @default(0)
}

model Problem {
  id                      Int         @id @default(autoincrement())
  name                    String      @db.VarChar(57)
  question                String      @db.VarChar(6000)
  solution                String      @db.VarChar(4400)
  difficulty              Difficulty
  collectionId            Int
  collection              Collection  @relation(fields: [collectionId], references: [id])
  creationDate            DateTime    @default(now())
  type                    String      @default("New")
  interval                Int         @default(-1) 
  relearnInterval         Int         @default(0)
  ease                    Float       @default(2.5) 
  dueDate                 DateTime    @default(now()) 
  language                String      @default("python")
  functionSignature       String      @default("null") @db.VarChar(1000)
  link                    String      @default("null")
  notes                   String      @default("null") @db.VarChar(2000)
  againCount              Int         @default(0) 
  hardCount               Int         @default(0) 
  goodCount               Int         @default(0) 
  easyCount               Int         @default(0) 
}

enum Difficulty {
  Easy
  Medium
  Hard
}